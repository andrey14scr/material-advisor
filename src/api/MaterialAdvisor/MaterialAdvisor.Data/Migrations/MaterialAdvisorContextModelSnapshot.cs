// <auto-generated />
using System;
using MaterialAdvisor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaterialAdvisor.Data.Migrations
{
    [DbContext(typeof(MaterialAdvisorContext))]
    partial class MaterialAdvisorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnswerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint");

                    b.Property<double>("Points")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AnswerGroupId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerGroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerGroups");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.LanguageEntity", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            Name = "English"
                        },
                        new
                        {
                            Id = (byte)1,
                            Name = "Polish"
                        });
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.LanguageTextEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnswerGroupsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnswersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("LanguageId")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("QuestionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("TopicsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnswerGroupsId");

                    b.HasIndex("AnswersId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("QuestionsId");

                    b.HasIndex("TopicsId");

                    b.ToTable("LanguageTexts");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.QuestionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint");

                    b.Property<double>("Points")
                        .HasColumnType("float");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Version")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.TopicEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.AnswerGroupEntity", "AnswerGroup")
                        .WithMany("Answers")
                        .HasForeignKey("AnswerGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnswerGroup");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerGroupEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.QuestionEntity", "Question")
                        .WithMany("AnswerGroups")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.LanguageTextEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.AnswerGroupEntity", "AnswerGroups")
                        .WithMany("Texts")
                        .HasForeignKey("AnswerGroupsId");

                    b.HasOne("MaterialAdvisor.Data.Entities.AnswerEntity", "Answers")
                        .WithMany("Texts")
                        .HasForeignKey("AnswersId");

                    b.HasOne("MaterialAdvisor.Data.Entities.LanguageEntity", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaterialAdvisor.Data.Entities.QuestionEntity", "Questions")
                        .WithMany("Texts")
                        .HasForeignKey("QuestionsId");

                    b.HasOne("MaterialAdvisor.Data.Entities.TopicEntity", "Topics")
                        .WithMany("Texts")
                        .HasForeignKey("TopicsId");

                    b.Navigation("AnswerGroups");

                    b.Navigation("Answers");

                    b.Navigation("Language");

                    b.Navigation("Questions");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.QuestionEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.TopicEntity", "Topic")
                        .WithMany("Questions")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.TopicEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerEntity", b =>
                {
                    b.Navigation("Texts");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerGroupEntity", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Texts");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.QuestionEntity", b =>
                {
                    b.Navigation("AnswerGroups");

                    b.Navigation("Texts");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.TopicEntity", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Texts");
                });
#pragma warning restore 612, 618
        }
    }
}
