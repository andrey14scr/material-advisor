// <auto-generated />
using System;
using MaterialAdvisor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaterialAdvisor.Data.Migrations
{
    [DbContext(typeof(MaterialAdvisorContext))]
    [Migration("20241109212356_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GroupEntityKnowledgeCheckEntity", b =>
                {
                    b.Property<Guid>("GroupsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KnowledgeChecksId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupsId", "KnowledgeChecksId");

                    b.HasIndex("KnowledgeChecksId");

                    b.ToTable("GroupEntityKnowledgeCheckEntity");
                });

            modelBuilder.Entity("GroupEntityUserEntity", b =>
                {
                    b.Property<Guid>("GroupsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("GroupEntityUserEntity");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnswerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint");

                    b.Property<double>("Points")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AnswerGroupId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerGroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsTechnical")
                        .HasColumnType("bit");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerGroups");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AttemptEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<Guid>("KnowledgeCheckId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("KnowledgeCheckId");

                    b.HasIndex("UserId");

                    b.ToTable("Attempts");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.GeneratedFileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("GeneratedFiles");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.GroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("OwnerId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.KnowledgeCheckEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAttemptOverrided")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManualOnlyVerification")
                        .HasColumnType("bit");

                    b.Property<byte?>("MaxAttempts")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("PassScore")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Time")
                        .HasColumnType("int");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("TopicId");

                    b.ToTable("KnowledgeChecks");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.LanguageEntity", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            Code = "",
                            Name = "English"
                        },
                        new
                        {
                            Id = (byte)1,
                            Code = "",
                            Name = "Polish"
                        });
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.LanguageTextEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnswerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("LanguageId")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnswerGroupId");

                    b.HasIndex("AnswerId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("TopicId");

                    b.ToTable("LanguageTexts");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.QuestionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint");

                    b.Property<double>("Points")
                        .HasColumnType("float");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.RefreshTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.SubmittedAnswerEntity", b =>
                {
                    b.Property<Guid>("AnswerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttemptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnswerGroupId", "AttemptId");

                    b.HasIndex("AttemptId");

                    b.ToTable("SubmittedAnswers");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.TopicEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersistentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.VerifiedAnswerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnswerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttemptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsManual")
                        .HasColumnType("bit");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AttemptId");

                    b.HasIndex("AnswerGroupId", "AttemptId");

                    b.ToTable("VerifiedAnswers");
                });

            modelBuilder.Entity("GroupEntityKnowledgeCheckEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.GroupEntity", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaterialAdvisor.Data.Entities.KnowledgeCheckEntity", null)
                        .WithMany()
                        .HasForeignKey("KnowledgeChecksId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GroupEntityUserEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.GroupEntity", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaterialAdvisor.Data.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.AnswerGroupEntity", "AnswerGroup")
                        .WithMany("Answers")
                        .HasForeignKey("AnswerGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnswerGroup");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerGroupEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.QuestionEntity", "Question")
                        .WithMany("AnswerGroups")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AttemptEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.KnowledgeCheckEntity", "KnowledgeCheck")
                        .WithMany("Attempts")
                        .HasForeignKey("KnowledgeCheckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaterialAdvisor.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KnowledgeCheck");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.GeneratedFileEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.UserEntity", "Owner")
                        .WithMany("GeneratedFiles")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.GroupEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.UserEntity", "Owner")
                        .WithMany("CreatedGroups")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.KnowledgeCheckEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.TopicEntity", "Topic")
                        .WithMany("KnowledgeChecks")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.LanguageTextEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.AnswerGroupEntity", "AnswerGroup")
                        .WithMany("Content")
                        .HasForeignKey("AnswerGroupId");

                    b.HasOne("MaterialAdvisor.Data.Entities.AnswerEntity", "Answer")
                        .WithMany("Content")
                        .HasForeignKey("AnswerId");

                    b.HasOne("MaterialAdvisor.Data.Entities.LanguageEntity", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaterialAdvisor.Data.Entities.QuestionEntity", "Question")
                        .WithMany("Content")
                        .HasForeignKey("QuestionId");

                    b.HasOne("MaterialAdvisor.Data.Entities.TopicEntity", "Topic")
                        .WithMany("Name")
                        .HasForeignKey("TopicId");

                    b.Navigation("Answer");

                    b.Navigation("AnswerGroup");

                    b.Navigation("Language");

                    b.Navigation("Question");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.QuestionEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.TopicEntity", "Topic")
                        .WithMany("Questions")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.RefreshTokenEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.SubmittedAnswerEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.AnswerGroupEntity", "AnswerGroup")
                        .WithMany()
                        .HasForeignKey("AnswerGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaterialAdvisor.Data.Entities.AttemptEntity", "Attempt")
                        .WithMany("SubmittedAnswers")
                        .HasForeignKey("AttemptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnswerGroup");

                    b.Navigation("Attempt");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.TopicEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.UserEntity", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.VerifiedAnswerEntity", b =>
                {
                    b.HasOne("MaterialAdvisor.Data.Entities.AnswerGroupEntity", "AnswerGroup")
                        .WithMany("VerifiedAnswers")
                        .HasForeignKey("AnswerGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaterialAdvisor.Data.Entities.AttemptEntity", "Attempt")
                        .WithMany("VerifiedAnswers")
                        .HasForeignKey("AttemptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaterialAdvisor.Data.Entities.SubmittedAnswerEntity", "SubmittedAnswer")
                        .WithMany("VerifiedAnswers")
                        .HasForeignKey("AnswerGroupId", "AttemptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnswerGroup");

                    b.Navigation("Attempt");

                    b.Navigation("SubmittedAnswer");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerEntity", b =>
                {
                    b.Navigation("Content");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AnswerGroupEntity", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Content");

                    b.Navigation("VerifiedAnswers");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.AttemptEntity", b =>
                {
                    b.Navigation("SubmittedAnswers");

                    b.Navigation("VerifiedAnswers");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.KnowledgeCheckEntity", b =>
                {
                    b.Navigation("Attempts");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.QuestionEntity", b =>
                {
                    b.Navigation("AnswerGroups");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.SubmittedAnswerEntity", b =>
                {
                    b.Navigation("VerifiedAnswers");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.TopicEntity", b =>
                {
                    b.Navigation("KnowledgeChecks");

                    b.Navigation("Name");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("MaterialAdvisor.Data.Entities.UserEntity", b =>
                {
                    b.Navigation("CreatedGroups");

                    b.Navigation("GeneratedFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
